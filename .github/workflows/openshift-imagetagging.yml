# Used to trigger deployment to test and prod Openshift environnment by Image stream re-tagging and labelling pod

name: Trigger deployment to test and prod Openshift environnment by Image stream re-tagging and labelling pod

on:        
  workflow_dispatch:
    inputs:
      app:
        description: 'App Name (jag-scss/jag-scss-tests)'
        required: true
        default: 'jag-scss'
      imageSourceEnv:
        type: choice
        description: Image Source environment
        options:
        - Select a Source Env Image to deploy
        - dev
        - test   
        required: true
        default: 'Select a Source Env Image to deploy'
      imageTargetEnv:
        type: choice
        description: Target Release Environment
        options:
        - Select a Target Env to deploy the Source Image
        - test
        - prod    
        required: true
        default: 'Select a Target Env to deploy the Source Image'
jobs:
  oc-image-tagging:
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.imageTargetEnv }}
    steps:

      - name: Check deployment source and target values
        if: |
          (github.event.inputs.imageSourceEnv == 'dev' &&  github.event.inputs.imageTargetEnv == 'prod') ||
          (github.event.inputs.imageSourceEnv == github.event.inputs.imageTargetEnv )
        run: |
          echo "Please select correct source and target env. Alays deployment should happen from Dev to Test and then Test to Prod"
          exit 1

      - name: Git Checkout
        uses: actions/checkout@v3
        
        # Get the version number which is prefixed with the Github release branches in format release/{version}
      - name: Get Release Version
        run: |
          branch=${GITHUB_REF##*/}
          version=$(echo $branch | cut -d "/" -f2-)
          echo "releaseVersion=$version" >> $GITHUB_ENV
        
        # Get Git latest short Sha# from the release branch used. This Sha# will be used in image tagging as well as DC Pod labelling.
      - name: Get git commit short sha
        id: sha
        run: |
          shortSha=$(echo $(git rev-parse --short HEAD) | cut -c1-7)
          echo "gitsha=$shortSha" >> $GITHUB_ENV
        
        # Prints vital release paramters used
      - name: Print Release Variables
        run: |
          echo "Release Application: ${{ github.event.inputs.app }}"
          echo "Release Environment: ${{ github.event.inputs.imageTargetEnv }}"
          echo "Release Version: ${{ env.releaseVersion }}"
          echo "Release Git Sha: ${{env.gitsha}}"
